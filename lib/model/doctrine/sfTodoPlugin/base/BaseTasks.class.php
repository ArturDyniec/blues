<?php

/**
 * BaseTasks
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property integer $sf_guard_user_id
 * @property integer $priority_id
 * @property boolean $status
 * @property Priority $Priority
 * @property sfGuardUser $sfGuardUser
 * 
 * @method string      getName()             Returns the current record's "name" value
 * @method integer     getSfGuardUserId()    Returns the current record's "sf_guard_user_id" value
 * @method integer     getPriorityId()       Returns the current record's "priority_id" value
 * @method boolean     getStatus()           Returns the current record's "status" value
 * @method Priority    getPriority()         Returns the current record's "Priority" value
 * @method sfGuardUser getSfGuardUser()      Returns the current record's "sfGuardUser" value
 * @method Tasks       setName()             Sets the current record's "name" value
 * @method Tasks       setSfGuardUserId()    Sets the current record's "sf_guard_user_id" value
 * @method Tasks       setPriorityId()       Sets the current record's "priority_id" value
 * @method Tasks       setStatus()           Sets the current record's "status" value
 * @method Tasks       setPriority()         Sets the current record's "Priority" value
 * @method Tasks       setSfGuardUser()      Sets the current record's "sfGuardUser" value
 * 
 * @package    Blues
 * @subpackage model
 * @author     WÅ‚odzimierz Gajda
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTasks extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tasks');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             ));
        $this->hasColumn('sf_guard_user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('priority_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => true,
             ));
        $this->hasColumn('status', 'boolean', null, array(
             'type' => 'boolean',
             'default' => true,
             ));

        $this->option('symfony', array(
             'filter' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Priority', array(
             'local' => 'priority_id',
             'foreign' => 'id',
             'onDelete' => 'CASCADE'));

        $this->hasOne('sfGuardUser', array(
             'local' => 'sf_guard_user_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($timestampable0);
    }
}