<?php

/**
 * BaseClip
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $html
 * @property string $ident
 * @property integer $width
 * @property integer $height
 * @property integer $song_id
 * @property Song $song
 * 
 * @method integer getId()      Returns the current record's "id" value
 * @method string  getHtml()    Returns the current record's "html" value
 * @method string  getIdent()   Returns the current record's "ident" value
 * @method integer getWidth()   Returns the current record's "width" value
 * @method integer getHeight()  Returns the current record's "height" value
 * @method integer getSongId()  Returns the current record's "song_id" value
 * @method Song    getSong()    Returns the current record's "song" value
 * @method Clip    setId()      Sets the current record's "id" value
 * @method Clip    setHtml()    Sets the current record's "html" value
 * @method Clip    setIdent()   Sets the current record's "ident" value
 * @method Clip    setWidth()   Sets the current record's "width" value
 * @method Clip    setHeight()  Sets the current record's "height" value
 * @method Clip    setSongId()  Sets the current record's "song_id" value
 * @method Clip    setSong()    Sets the current record's "song" value
 * 
 * @package    Blues
 * @subpackage model
 * @author     WÅ‚odzimierz Gajda
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseClip extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('clip');
        $this->hasColumn('id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('html', 'string', 4096, array(
             'type' => 'string',
             'length' => 4096,
             ));
        $this->hasColumn('ident', 'string', 128, array(
             'type' => 'string',
             'length' => 128,
             ));
        $this->hasColumn('width', 'integer', null, array(
             'type' => 'integer',
             'default' => 420,
             ));
        $this->hasColumn('height', 'integer', null, array(
             'type' => 'integer',
             'default' => 315,
             ));
        $this->hasColumn('song_id', 'integer', null, array(
             'type' => 'integer',
             ));

        $this->option('orderBy', 'updated_at DESC, created_at DESC');
        $this->option('collate', 'utf8_polish_ci');
        $this->option('charset', 'utf8');
        $this->option('type', 'InnoDB');
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Song as song', array(
             'local' => 'song_id',
             'foreign' => 'id'));

        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'unique' => true,
             'fields' => 
             array(
              0 => 'ident',
             ),
             'canUpdate' => false,
             ));
        $timestampable0 = new Doctrine_Template_Timestampable();
        $this->actAs($sluggable0);
        $this->actAs($timestampable0);
    }
}