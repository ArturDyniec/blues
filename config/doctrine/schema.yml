options:
  collate: utf8_polish_ci
  charset: utf8
  type: InnoDB



Song:
  options:
    orderBy: title
    collate: utf8_polish_ci
    charset: utf8
    type: InnoDB
  actAs:
    Sluggable:
      unique: true
      fields: [title]
      canUpdate: false
  columns:
    id:
      type: integer
      primary: true
      notnull: true
      autoincrement: true
    title:
      type: string(128)
    lyrics:
      type: string(4096)

      
      
  relations:
    artists:
      class: Artist
      refClass: ArtistSong
      foreignAlias: artists



Clip:
  options:
    orderBy: updated_at DESC, created_at DESC
    collate: utf8_polish_ci
    charset: utf8
    type: InnoDB
  actAs:
    Sluggable:
      unique: true
      fields: [ident]
      canUpdate: false
    Timestampable:
  columns:
    id:
      type: integer
      primary: true
      notnull: true
      autoincrement: true
    html:
      type: string(4096)

    ident:
      type: string(128)

    width:
      type: integer
      default: 420

    height:
      type: integer
      default: 315

    song_id:
      type: integer
#      notnull: true

  relations:
    song:
      class: Song
      local: song_id
      foreign: id
      foreignAlias: clips
      foreignType: many
      type: one

#  indexes:
#    fk_clip_song:
#      fields: [song_id]




Artist:
  options:
    orderBy: name
    collate: utf8_polish_ci
    charset: utf8
    type: InnoDB
  actAs:
    Sluggable:
      unique: true
      fields: [name]
      canUpdate: false
  columns:
    id:
      type: integer
      primary: true
      notnull: true
      autoincrement: true
    name:
      type: string(128)
  relations:
    songs:
      class: Song
      refClass: ArtistSong
      foreignAlias: songs


ArtistSong:
  tableName: artist_has_song
  columns:
    artist_id:
      type: integer
      primary: true
      notnull: true
    song_id:
      type: integer
      primary: true
      notnull: true
  relations:
    artist:
      class: Artist
      local: artist_id
      foreign: id
      foreignAlias: songs
      foreignType: many
      type: one
    song:
      class: Song
      local: song_id
      foreign: id
      foreignAlias: artists
      foreignType: many
      type: one
#  indexes:
#    fk_artist_has_song_artist:
#      fields: [artist_id]
#    fk_artist_has_song_song:
#      fields: [song_id]

